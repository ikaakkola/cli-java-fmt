<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.randomcodemonkey.cli</groupId>
  <artifactId>cli-java-fmt</artifactId>
  <version>0.0.2</version>
  <packaging>jar</packaging>
  <name>cli-java-fmt</name>
  <description>Run google-java-fmt as a cli application</description>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <java.version>21</java.version>
    <imageName>javafmt</imageName>
    <exec.mainClass>org.randomcodemonkey.cli.JavaFmtApp</exec.mainClass>
  </properties>
  <dependencies>
    <dependency>
      <groupId>com.google.googlejavaformat</groupId>
      <artifactId>google-java-format</artifactId>
      <version>1.26.0</version>
    </dependency>
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
      <version>4.7.6</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>java</id>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <mainClass>${exec.mainClass}</mainClass>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.source}</target>
          <annotationProcessorPaths>
            <path>
              <groupId>info.picocli</groupId>
              <artifactId>picocli-codegen</artifactId>
              <version>4.7.6</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <archive>
            <manifestEntries>
              <Add-Exports>jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</Add-Exports>
            </manifestEntries>
            <manifest>
              <addClasspath>true</addClasspath>
              <mainClass>${exec.mainClass}</mainClass>
            </manifest>
          </archive>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>native</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>0.10.3</version>
            <extensions>true</extensions>
            <executions>
              <execution>
                <id>build-native</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <phase>package</phase>
              </execution>
              <execution>
                <id>test-native</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <phase>test</phase>
              </execution>
            </executions>
            <configuration>
              <fallback>false</fallback>
              <buildArgs>
                <buildArg>-J--add-modules</buildArg>
                <buildArg>-JALL-SYSTEM</buildArg>
                <buildArg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</buildArg>
                <buildArg>--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</buildArg>
                <buildArg>--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</buildArg>
                <buildArg>--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</buildArg>
                <buildArg>--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</buildArg>
                <buildArg>--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</buildArg>
                <buildArg>--no-fallback</buildArg>
                <buildArg>--initialize-at-build-time=com.sun.tools.javac.file.Locations</buildArg>
                <buildArg>-H:IncludeResourceBundles=com.sun.tools.javac.resources.compiler</buildArg>
                <buildArg>-H:IncludeResourceBundles=com.sun.tools.javac.resources.javac</buildArg>
              </buildArgs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
